{"version":3,"sources":["components/HomeView.jsx","components/MapView.jsx","config.js","components/ImageView.jsx","logo.svg","components/InfoView.jsx","components/Content.jsx","components/Navbar.jsx","components/Application.jsx","reportWebVitals.js","index.js"],"names":["HomeView","className","id","Component","MapView","Config","API_URL","ImageView","state","fullName","category","links","name","type","onClick","this","classify","map","link","file","document","forms","files","request","XMLHttpRequest","onreadystatechange","readyState","status","data","JSON","parse","responseText","console","log","predictions","tagName","fileReader","FileReader","onload","bytes","Uint8Array","result","open","setRequestHeader","send","readAsArrayBuffer","speciesTag","responseXML","Links","push","Link","setState","FullName","Category","stringify","InfoView","allSpecies","species","getData","title","src","imageURL","logo","alt","text","paragraph","href","target","rel","list","i","length","FullSpeciesName","speciesName","Details","information","Information","Image","Content","selectView","props","nameOfView","Navbar","routingFunction","Application","nameOfCurrentView","Fragment","view","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.609073c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./HomeView.css\";\n\nclass HomeView extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Welcome!</h1>\n\n                <div className='info'>\n                    <h4>About</h4>\n                    <p>\n                        The purpose of this app is to make preserving endangered species\n                        easy. Currently, 3 functionalities are offered. These are described below\n                        and accesible from the navigation bar on top of the page.\n                    </p>\n                </div>\n\n                <div className='info'>\n                    <h4>Map of Endangered Species</h4>\n                    <p>\n                        This functionality displays a world map and provides information about\n                        location of endangered species inhabiting selected areas.\n                        To select an area, simply click on it or choose the option \"select my location\"\n                        to select your current location.\n                    </p>\n                </div>\n\n                <div id='guardian-of-responisveness'></div>\n\n                <div className='info'>\n                    <h4>Species Classification</h4>\n                    <p>\n                        Species Classification helps identify endangered species based on an uploaded\n                        photo. To identify an endangered species, upload an image and select \"Identify\".\n                        The photo will be identified as a certain endangered species or it will not be identified as any.\n                    </p>\n                </div>\n\n                <div className='info'>\n                    <h4>Encyclopedia</h4>\n                    <p>\n                        All the endangered species present in our database have a small encyclopedia entry.\n                        That way, you can learn more about endangered species in your area and around the world.\n                    </p>\n                </div>\n\n                <div className='empty'></div>\n            </div>\n        );\n    }\n}\n\nexport default HomeView;\n","import React, { Component } from \"react\";\n\n//import AzureMapCom from './App.js';\n\nclass MapView extends Component {\n    render() {\n        return (\n            <><h4>mapka</h4><div>\n                {/* <AzureMapCom/> */}\n            </div></>\n        );\n    }\n}\n\nexport default MapView;\n","export default class Config {\r\n    static API_URL = 'url';\r\n}\r\n","import React, { Component } from 'react';\nimport Config from '../config';\nimport './ImageView.css';\n\nclass ImageView extends Component {\n    state = {\n        fullName: 'Name',\n        category: 'Category',\n        links: ['Links']\n    };\n\n    render() {\n        return (\n            <div className='wrapper'>\n                <div className='input-container'>\n                    <h3>Check an animal</h3>\n                    <form name='form'>\n                        <input name='file' type='file' className='file-input' />\n\n                    </form>\n                    <button onClick={this.classify}>Check</button>\n                </div>\n\n                <div className='information-container'>\n                    <div className='half centered-content right-bordered'>\n                        <h4>{this.state.fullName}</h4>\n                    </div>\n\n                    <div className='half centered-content'>\n                        <h4>{this.state.category}</h4>\n                    </div>\n\n                    <div className='cb'></div>\n\n                    <div className='links centered-content'>\n                        {this.state.links.map(link => <div key={link}>{link}</div>)}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    classify() {\n        let file = document.forms['form']['file'].files[0];\n\n        if (file == null) {\n            return;\n        }\n\n        const request = new XMLHttpRequest();\n        request.onreadystatechange = () => {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    const data = JSON.parse(request.responseText);\n                    console.log(data.predictions[0].tagName);\n                }\n            }\n        };\n\n        let fileReader = new FileReader();\n        fileReader.onload = function () {\n            const URL = 'https://westeurope.api.cognitive.microsoft.com/customvision/v3.0/Prediction/b9a1c1ac-eaca-4965-be2a-47615d7fb885/classify/iterations/Iteration1/image';\n            let bytes = new Uint8Array(this.result);\n            request.open('POST', URL, true);\n            request.setRequestHeader('Prediction-Key', 'b3d0774404464793a6117c6d1c89b8c0');\n            request.setRequestHeader('Content-Type', 'application/octet-stream');\n            request.send(bytes);\n        };\n\n        fileReader.readAsArrayBuffer(file);\n    }\n\n    getInfo(speciesTag) {\n        const request = new XMLHttpRequest();\n        request.onload = () => {\n            const data = JSON.parse(request.responseXML);\n            let links = [];\n\n            for (const link of data.Links) {\n                links.push(link.Link);\n            }\n\n            this.setState({\n                fullName: data.FullName,\n                category: data.Category,\n                links: links\n            });\n        };\n\n        request.open('POST', Config.API_URL + '/api/species-tag', true);\n        request.setRequestHeader('Content-Type', 'application/json');\n        request.send(JSON.stringify({ name: speciesTag }));\n    }\n}\n\nexport default ImageView;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport Config from '../config';\nimport logo from '../logo.svg'\nimport './InfoView.css';\n\nclass InfoView extends Component {\n    state = {};\n\n    render() {\n        return (\n            <div className='container'>\n                <div className='sidebar'>\n                    {this.state.allSpecies == null\n                        ? <div className='sidebar-element'>Loading...</div>\n                        : this.state.allSpecies.map(species => <div key={species}\n                            className='sidebar-element' onClick={() => this.getData(species)}>{species}</div>)}\n                </div>\n\n                <div className='content'>\n                    <div className='title'>\n                        <h2 className='header2'>{this.state.title == null ? 'Encyclopedia' : this.state.title}</h2>\n                    </div>\n\n                    <div className='image'>\n                        <img src={this.state.imageURL == null ? logo : this.state.imageURL} alt='' />\n                    </div>\n\n                    <div className='text'>\n                        {this.state.text == null ? 'Choose species on the sidebar to display information.'\n                            : this.state.text.map(paragraph => <p key={paragraph}>paragraph</p>)}\n                    </div>\n\n                    <div className='footer'>\n                        <div>\n                            <div>Sources:</div>\n                            {this.state.links == null ? '' : this.state.links.map(\n                                link => <div key={link}> <a href={link} target='_blank' rel='noreferrer'>{link}</a></div>)}\n                        </div>\n                    </div>\n                </div>\n\n                <div className='empty'></div>\n            </div>\n        );\n    }\n\n    getSpecies() {\n        const request = new XMLHttpRequest();\n        request.onload = () => {\n            let list = JSON.parse(request.responseText);\n\n            for (let i = 0; i < list.length; i++) {\n                list[i] = list[i].FullSpeciesName;\n            }\n\n            this.setState({ allSpecies: list });\n        };\n\n        request.open('GET', Config.API_URL + '/api/species', true);\n        request.send();\n    }\n\n    getData(speciesName) {\n        const request = new XMLHttpRequest();\n        request.onload = () => {\n            const data = JSON.parse(request.responseXML);\n            let text = [];\n            let links = [];\n\n            for (const information of data.Details) {\n                text.push(information.Information);\n            }\n\n            for (const link of data.Links) {\n                links.push(link.Link);\n            }\n\n            this.setState({\n                title: speciesName,\n                text: text,\n                imageURL: 'data:image/(png|jpg);base64, ' + data.Image,\n                links: links\n            });\n        };\n\n        request.open('POST', Config.API_URL + '/api/encyclopedia', true);\n        request.setRequestHeader('Content-Type', 'application/json');\n        request.send(JSON.stringify({ name: speciesName }));\n    }\n}\n\nexport default InfoView;\n","import React, { Component } from \"react\";\nimport HomeView from \"./HomeView\";\nimport MapView from \"./MapView\";\nimport ImageView from \"./ImageView\";\nimport InfoView from \"./InfoView\";\nimport \"./Content.css\";\n\nclass Content extends Component {\n    render() {\n        return <div className=\"Content\">{this.selectView()}</div>;\n    }\n\n    selectView() {\n        switch (this.props.nameOfView) {\n            case \"homeview\":\n                return <HomeView />\n            case \"mapview\":\n                return <MapView />\n            case \"imageview\":\n                return <ImageView />\n            case \"infoview\":\n                return <InfoView />\n            default:\n                return <h1> ERROR </h1>\n        }\n    }\n}\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport \"./Navbar.css\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <div className=\"Navbar\">\n                <button className=\"navbar-button\" onClick={() => this.props.routingFunction(\"homeview\")}>\n                    Homepage\n                </button>\n                <button className=\"navbar-button\" onClick={() => this.props.routingFunction(\"mapview\")}>\n                    Map of Endangered Species\n                </button>\n                <button className=\"navbar-button\" onClick={() => this.props.routingFunction(\"imageview\")}>\n                    Species Classification\n                </button>\n                <button className=\"navbar-button\" onClick={() => this.props.routingFunction(\"infoview\")}>\n                    Encyclopedia\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport Content from \"./Content\";\nimport Navbar from \"./Navbar\";\n\nclass Application extends Component {\n    state = { nameOfCurrentView: \"homeview\" };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar routingFunction={view => this.setState({ nameOfCurrentView: view })} />\n                <Content nameOfView={this.state.nameOfCurrentView} />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Application;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Application from './components/Application';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}